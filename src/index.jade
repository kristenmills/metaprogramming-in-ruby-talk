doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    title Metaprogramming in Ruby
    meta(name='description', content='A framework for easily creating beautiful presentations using HTML')
    meta(name='author', content='Hakim El Hattab')
    meta(name='apple-mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-status-bar-style', content='black-translucent')
    meta(name='viewport', content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no')
    link(rel='stylesheet', href='css/reveal.min.css')
    link#theme(rel='stylesheet', href='css/theme/moon.css')
    // For syntax highlighting
    link(rel='stylesheet', href='lib/css/solarized-dark.css')
    // If the query includes 'print-pdf', use the PDF print sheet
    //if lt IE 9
      script(src='lib/js/html5shiv.js')
  body
    .reveal
      // Any section element inside of this container is displayed as a slide
      .slides
        section
          h2 Metaprogramming in Ruby
          p Created By 
            a(href='http://kristen-mills.com') Kristen Mills
        section
          h2 What is Metaprogramming?

         aside.notes
            Metaprogramming is writing code that writes code.
            Also awesome
        section
          section
            h1 The Basics
          section
            h2 Symbols
            ul
              li Kind of like strings
              li Immutable
              li Not garbage collected
          section
            h2 Blocks
            ul
              li That do...end thing
              ul
                li or curly braces if on one line
              li One of the 3 types of closures
        section
          section
            h1 Monkey
            h1 Patching
          section(data-markdown="src/slides/monkey_patch.md",
          data-separator="^\n\n\n",
          data-vertical="^\n\n",
          data-notes="^Note:",
          data-charset="iso-8859-15")
          section
            h2 Refinements
            ul
              li Allows you to monkey patch in a given scope
        section
          h2 Aliasing method
          ul
            li alias method_1, method_2
            li alias_method :method_1, :method_2
        section
          h2 Defining Methods
          ul
            li def method_name(params)
            li define_method(name, &block)
            li define_singleton_method(name, &block)
        section
          h2 Instance Variables
          ul
            li instance_variable_set(name, value)
            li instance_variable_get(name)
        section(data-markdown="src/slides/attr_accessor.md",
          data-separator="^\n\n\n",
          data-vertical="^\n\n",
          data-notes="^Note:",
          data-charset="iso-8859-15")
        section
          section
            h1 Eigenclasses!
          section
            h3 Wait, where does that method go?
          section(data-markdown="src/slides/access_eigen.md",
          data-separator="^\n\n\n",
          data-vertical="^\n\n",
          data-notes="^Note:",
          data-charset="iso-8859-15")
          section
            h3 Before you ask
            ul
              li Yes, eigenclasses have Eigenclasses
        section
          h2 Calling Methods
          ul
            li send(name, *args)
        section
          h2 Removing Methods
          ul
            li remove_method(name)
            li undef_method(name)
        section
          section
            h1 Rails Black Magic
            h3 (aka Method Missing)
          section
            h2 Method Missing
            ul
              li method_missing(method, *args, &block)
        section
          section
            h1 Domain Specific Languages
          section
            h2 Evaluating Strings/Blocks
            ul
              li eval(string)
              li instance_eval(string)
              li instance_eval(&block)
              li instance_exec(*args, &block)
              li yield(*args)
              li call(*args)
          section(data-markdown="src/slides/finite.md",
            data-separator="^\n\n\n",
            data-vertical="^\n\n",
            data-notes="^Note:",
            data-charset="iso-8859-15")
          section(data-markdown="src/slides/add_event.md",
            data-separator="^\n\n\n",
            data-vertical="^\n\n",
            data-notes="^Note:",
            data-charset="iso-8859-15")

        section
          h1 Any Questions?
        section
          h1 Thanks!
    script(src='lib/js/head.min.js')
    script(src='js/reveal.min.js')
    script(src='js/init.js')